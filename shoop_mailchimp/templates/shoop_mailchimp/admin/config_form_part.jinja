{% from "shoop/admin/macros/general.jinja" import content_block %}

{% macro render_command_button(condition, title, command_url) %}
    {% if condition %}
    <button type="submit" class="btn btn-primary" onclick="sendCommand('{{ command_url }}')">
        {{ title }}
    </button>
    {% endif %}
{% endmacro %}

{% set mailchimp_form = form["mailchimp"] %}
{% set show_instructions = mailchimp_form.show_instructions() %}
{% set can_initialize = mailchimp_form.can_initialize() %}
{% set has_store_id = mailchimp_form.has_store_id() %}
{% set can_update_contacts = mailchimp_form.can_update_contacts() %}

{% call content_block(_("Mailchimp"), "fa-envelope-o") %}
    {% if show_instructions %}
    <div class="row col-sm-10">
        <h2>{% trans %}It seems you have not yet initialized your integration!{% endtrans %}</h2>
        <p>
        {% trans -%}
        To initialize your integration with Mailchimp, please create a Mailchimp list in your Mailchimp admin panel
        and link it to Shoop. Make sure you setup an empty Mailchimp list for your shop. The List ID can be found under
        "Settings->List name and defaults" in the Mailchimp admin panel. Store is generated during initialization.
        {%- endtrans %}
        </p>
        <p>
        {% trans -%}
        The second step is to generate an API key for the integration in your Mailchimp admin panel and add it to the form below.
        API key generation can be found under "Account->Extras->API keys" in the Mailchimp admin panel.
        {%- endtrans  %}
        </p>
        <p>
        {% trans -%}
        When you have all the configurations saved press the Initialize-button to activate your integration.
        {%- endtrans  %}
        </p>
    </div>
    {% endif %}
    <br>
    <div class="row col-sm-12 text-center">
        {{ render_command_button(can_initialize, _("Initialize"), url("shoop_admin:mailchimp.initialize_store", shop_pk=shop.pk)) }}
        {{ render_command_button(can_update_contacts, _("Update Contacts"), url("shoop_admin:mailchimp.update_contacts", shop_pk=shop.pk)) }}
    </div>
    <br>
    {{ bs3.field(mailchimp_form["is_enabled"]) }}
    {{ bs3.field(mailchimp_form["username"]) }}
    {{ bs3.field(mailchimp_form["api_key"]) }}
    {{ bs3.field(mailchimp_form["list_id"]) }}
    {{ bs3.field(mailchimp_form["store_id"]) }}

    {% if not can_initialize %}
        {% set test_url = url("shoop_admin:mailchimp.configurations_test", shop_pk=shop.pk) %}
        <button type="submit" class="btn btn-warning center-block" onclick="sendCommand('{{ test_url }}')">
            <i class="fa fa-check"></i>
            {% trans %}Test configurations{% endtrans %}
        </button>
        <br>
        <p class="text-center">{% trans %}Please save configuration keys before testing.{% endtrans %}</p>
    {% endif %}
{% endcall %}

{% block extra_js %}
<script>
    function sendCommand(url) {
        event.preventDefault();
        const defaultError = "{% trans %}Unexpected error happened please try again.{% endtrans %}";
        $.ajax({
            type: "GET",
            url: url,
            success: function(data) {
                Messages.enqueue({
                    tags: "success",
                    text: data.message
                });
            },
            error: function(response) {
                Messages.enqueue({
                    tags: "error",
                    text: response.responseJSON ? response.responseJSON.message : defaultError
                });
            }
        });
        return false;
    }
</script>
{% endblock %}
